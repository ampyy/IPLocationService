// using Microsoft.AspNetCore.Mvc;
// using Location.Interfaces.Services;
// using Location.Models;

// namespace LocationService.Controllers
// {
//     public class LocationController : Controller
//     {
//         private readonly ILogger<LocationController> _logger;
//         private readonly IProviderSelectorLogic _providerSelectorLogic;
//         private readonly IProviderCallerLogic _providerCallerLogic;

//         public LocationController(ILogger<LocationController> logger, IProviderSelectorLogic providerSelectorLogic, IProviderCallerLogic providerCallerLogic)
//         {
//             _logger = logger;
//             _providerSelectorLogic = providerSelectorLogic;
//             _providerCallerLogic = providerCallerLogic;
//         }

//         /// <summary>
//         /// Retrieves location information based on the provided IP address.
//         /// </summary>
//         /// <param name="ipAddress">The IP address to look up.</param>
//         /// <returns>The JSON response from the IP location provider.</returns>
//         [HttpGet]
//         [Route("api/location")]
//         public async Task<IActionResult> GetLocation(string ipAddress)
//         {
//             // Check if the IP address is null or whitespace
//             if (string.IsNullOrWhiteSpace(ipAddress))
//             {
//                 return BadRequest("IP address cannot be null or empty.");
//             }

//             try
//             {
//                 Provider provider = await _providerSelectorLogic.GetBestProviderAsync();
//                 var response = await _providerCallerLogic.CallProviderApiAsync(provider, ipAddress);
//                 return Content(response, "application/json");
//             }
//             catch (Exception ex)
//             {
//                 _logger.LogError(ex, "An error occurred while retrieving location information.");
//                 return StatusCode(500, "An error occurred while processing your request.");
//             }
//         }
//     }
// }
